import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;

public class CopyOfWebsiteAnalyzer {

	public static void main(String args[]) {
		CopyOfWebsiteAnalyzer websiteAnalyzer = new CopyOfWebsiteAnalyzer();
		websiteAnalyzer.reportPageAccess("www.google.com");
		websiteAnalyzer.reportPageAccess("www.google.com");
		websiteAnalyzer.reportPageAccess("www.googlewe.com");
		websiteAnalyzer.reportPageAccess("www.googleae.com");
		websiteAnalyzer.reportPageAccess("www.google.com");
		websiteAnalyzer.reportPageAccess("www.googlea.com");
		websiteAnalyzer.reportPageAccess("www.googleae.com");
		websiteAnalyzer.reportPageAccess("www.googleae.com");
		websiteAnalyzer.getTopNPages(100);
	}

	Set<Website> allTheWebsites = new TreeSet<Website>();

	Map<String, Website> urlWEbbsiteMapping = new HashMap<String, Website>();

	// you may declare and use other variables or
	// other helper methods you may need
	public void reportPageAccess(String pageUrl) {
		// your pre here

	}

	// the size of the list returned must be n
	public List getTopNPages(int n) {
		Set<Integer> keySet = allWebsiteCountMap.keySet();
		TreeSet<Integer> sortedKey = new TreeSet<Integer>(new CompareTheKeys());
		sortedKey.addAll(keySet);
		for (Integer integer : sortedKey) {
			System.out.println(">>>> " + integer);
			Set<Website> set = allWebsiteCountMap.get(integer);
			for (Iterator iterator = set.iterator(); iterator.hasNext();) {
				Website website = (Website) iterator.next();
				System.out.println(website.getWebsiteUrl());
			}
		}
		return null;
		// your pre here
	}
}

